(in-package :lem)

(defvar *string->key* (make-hash-table :test 'equal))
(defvar *key->symbol* (make-hash-table))
(readtable-case *readtable*)
(defmacro defkeycode (name code)
  (when (integerp code)
    (setf code (code-char code)))
  `(progn
     (setf (gethash ,name *string->key*) ,code
           (gethash ,code *key->symbol*) ,name)
     (defconstant ,(intern (string (read-from-string (format nil "#:~A" name)))) ,code)))

(defkeycode "C-@" 0)
(defkeycode "C-a" 1)
(defkeycode "C-b" 2)
(defkeycode "C-c" 3)
(defkeycode "C-d" 4)
(defkeycode "C-e" 5)
(defkeycode "C-f" 6)
(defkeycode "C-g" 7)
(defkeycode "C-h" 8)
(defkeycode "C-i" 9)
(defkeycode "C-j" 10)
(defkeycode "C-k" 11)
(defkeycode "C-l" 12)
(defkeycode "C-m" 13)
(defkeycode "C-n" 14)
(defkeycode "C-o" 15)
(defkeycode "C-p" 16)
(defkeycode "C-q" 17)
(defkeycode "C-r" 18)
(defkeycode "C-s" 19)
(defkeycode "C-t" 20)
(defkeycode "C-u" 21)
(defkeycode "C-v" 22)
(defkeycode "C-w" 23)
(defkeycode "C-x" 24)
(defkeycode "C-y" 25)
(defkeycode "C-z" 26)
(defkeycode "escape" 27)
(defkeycode "Spc" #x20)

(loop for i from #x21 below #x7F
         for c = (code-char i)
         do (setf (gethash (string c) *string->key*) c
                     (gethash i *key->symbol*) (string c)))

(defkeycode "[down]" #o402)
(defkeycode "[up]" #o403)
(defkeycode "[left]" #o404)
(defkeycode "[right]" #o405)
(defkeycode "C-down" 525)
(defkeycode "C-up" 566)
(defkeycode "C-left" 545)
(defkeycode "C-right" 560)
(defkeycode "[home]" #o406)
(defkeycode "[backspace]" #o407)
(defkeycode "[f0]" #o410)
(defkeycode "[f1]" #o411)
(defkeycode "[f2]" #o412)
(defkeycode "[f3]" #o413)
(defkeycode "[f4]" #o414)
(defkeycode "[f5]" #o415)
(defkeycode "[f6]" #o416)
(defkeycode "[f7]" #o417)
(defkeycode "[f8]" #o420)
(defkeycode "[f9]" #o421)
(defkeycode "[f10]" #o422)
(defkeycode "[f11]" #o423)
(defkeycode "[f12]" #o424)
(defkeycode "[dl]" #o510)
(defkeycode "[il]" #o511)
(defkeycode "[dc]" #o512)
(defkeycode "C-dc" 519)
(defkeycode "[ic]" #o513)
(defkeycode "[eic]" #o514)
(defkeycode "[clear]" #o515)
(defkeycode "[eos]" #o516)
(defkeycode "[eol]" #o517)
(defkeycode "[sf]" #o520)
(defkeycode "[sr]" #o521)
(defkeycode "[npage]" #o522)
(defkeycode "[ppage]" #o523)
(defkeycode "[stab]" #o524)
(defkeycode "[ctab]" #o525)
(defkeycode "[catab]" #o526)
(defkeycode "[enter]" #o527)
(defkeycode "[print]" #o532)
(defkeycode "[ll]" #o533)
(defkeycode "[a1]" #o534)
(defkeycode "[a3]" #o535)
(defkeycode "[b2]" #o536)
(defkeycode "[c1]" #o537)
(defkeycode "[c3]" #o540)
(defkeycode "[btab]" #o541)
(defkeycode "[beg]" #o542)
(defkeycode "[cancel]" #o543)
(defkeycode "[close]" #o544)
(defkeycode "[command]" #o545)
(defkeycode "[copy]" #o546)
(defkeycode "[create]" #o547)
(defkeycode "[end]" #o550)
(defkeycode "[exit]" #o551)
(defkeycode "[find]" #o552)
(defkeycode "[help]" #o553)
(defkeycode "[mark]" #o554)
(defkeycode "[message]" #o555)
(defkeycode "[move]" #o556)
(defkeycode "[next]" #o557)
(defkeycode "[open]" #o560)
(defkeycode "[options]" #o561)
(defkeycode "[previous]" #o562)
(defkeycode "[redo]" #o563)
(defkeycode "[reference]" #o564)
(defkeycode "[refresh]" #o565)
(defkeycode "[replace]" #o566)
(defkeycode "[restart]" #o567)
(defkeycode "[resume]" #o570)
(defkeycode "[save]" #o571)
(defkeycode "[sbeg]" #o572)
(defkeycode "[scancel]" #o573)
(defkeycode "[scommand]" #o574)
(defkeycode "[scopy]" #o575)
(defkeycode "[screate]" #o576)
(defkeycode "[sdc]" #o577)
(defkeycode "[sdl]" #o600)
(defkeycode "[select]" #o601)
(defkeycode "[send]" #o602)
(defkeycode "[seol]" #o603)
(defkeycode "[sexit]" #o604)
(defkeycode "[sfind]" #o605)
(defkeycode "[shelp]" #o606)
(defkeycode "[shome]" #o607)
(defkeycode "[sic]" #o610)
(defkeycode "[sleft]" #o611)
(defkeycode "[smessage]" #o612)
(defkeycode "[smove]" #o613)
(defkeycode "[snext]" #o614)
(defkeycode "[soptions]" #o615)
(defkeycode "[sprevious]" #o616)
(defkeycode "[sprint]" #o617)
(defkeycode "[sredo]" #o620)
(defkeycode "[sreplace]" #o621)
(defkeycode "[sright]" #o622)
(defkeycode "[srsume]" #o623)
(defkeycode "[ssave]" #o624)
(defkeycode "[ssuspend]" #o625)
(defkeycode "[sundo]" #o626)
(defkeycode "[suspend]" #o627)
(defkeycode "[undo]" #o630)
(defkeycode "[mouse]" #o631)
(defkeycode "[resize]" #o632)
(defkeycode "[event]" #o633)

(defun ctrl-p (c)
  (char<= C-@ c C-z))
